https://leetcode.com/problems/reverse-nodes-in-k-group/

class Solution {
public:
int getLength(ListNode*head){
    ListNode*temp=head;
    int len=0;
    while(temp!=NULL){
        temp=temp->next;
        len++;
    }
    return len;
}
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL)
        return head;
        if(head->next==NULL)
        return head;
       ListNode* prev=NULL;
        ListNode*curr=head;
        ListNode*nextNode=curr->next;
        int pos=0;
        int len=getLength(head);
        if(len<k){
            return head;
        }
        while(pos<k){

            nextNode=curr->next;
            curr->next=prev;
            prev=curr;
            curr=nextNode;
            pos++; 
        }
        ListNode*recursionKa=NULL;
        if(nextNode!=NULL){
            recursionKa=reverseKGroup(nextNode,k);
            head->next=recursionKa;
        }
          //very very imp  .......//
          return prev; 
    }
};
