https://leetcode.com/problems/minimum-size-subarray-sum/description/

class Solution {
public:
    int minSubArrayLen(int target, vector<int>& nums) {
         //variable size window
         int s=0;int e=0;
         int len=INT_MAX;
         int sum=0;
         while(e<nums.size()){
            //sum me include karo value
            sum+=nums[e];
            //sum==target
            //sum>target ho
            //sum<target ho
            //minimise ->equal or greater 
            //explore ->lesser sum<target me 
           while(sum>=target){
            //minimise
            
                len=min(len,e-s+1);
            
            //currrent element pointed by start should be removed by sum
            sum=sum-nums[s];
            s++;
           }
           //explore
           e++;

         }
         if(len==INT_MAX){
            return 0;
         }
         else{
            return len;
         }
    }
};
