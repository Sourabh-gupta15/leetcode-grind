class Node{
public:

//morris traversal 
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>ans;
      TreeNode*curr=root;
      while(curr)
      {
        //left node is NULL then , visit it and go right //without recursion 
        if(curr->left==nullptr){
            ans.push_back(curr->val);
            curr=curr->right;
        }
        //left node is not null
        else{
            //find inorder predecessor
            TreeNode*pred=curr->left;
            while( pred->right!=curr&& pred->right){
               pred= pred->right;
            }
            //if right node is null then go ,left after establishing link from pred to curr
              if(pred->right==nullptr){
                pred->right=curr;
                curr=curr->left;
              }
              else{
                //right is not null
                //left is already visited,go right after visiting curr node,while removing the link
                pred->right=nullptr;
                ans.push_back(curr->val);
                curr=curr->right;
              }
        }}
        return ans;
      }
};
