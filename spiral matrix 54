https://leetcode.com/problems/spiral-matrix/description/

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
    
        int row =matrix.size();
        int col=matrix[0].size();
        int count=0;
        int total=row*col;
        int startingRow=0;int endingRow=row-1;
        int endingCol=col-1;
        int startingCol=0;
        vector<int>ans;
        while(count<total){
            //printing starting row
            for(int index=startingCol; count<total &&index<=endingCol;index++){
                ans.push_back(matrix[startingRow][index]);
                count++;

            }
            startingRow++;
            for(int i=startingRow;count<total&&i<=endingRow;i++){
                ans.push_back(matrix[i][endingCol]);
            count++;
            }
            endingCol--;
            for(int i=endingCol;count<total&&i>=startingCol;i--){
                ans.push_back(matrix[endingRow][i]);
                count++;
            }
            endingRow--;
            for(int i=endingRow;count<total&&i>=startingRow;i--){
                ans.push_back(matrix[i][startingCol]);
                count++;
            }
            startingCol++;

        }
        return ans;
    }
};
