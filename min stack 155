https://leetcode.com/problems/min-stack/description/

class MinStack {
public:
vector<pair<int,int>>st;

    MinStack() {

        
    }
    
    void push(int val) {
        if(st.empty()){
            pair<int,int>p=make_pair(val,val);
           // p.first=val;
            //p.second=val;
            st.push_back(p);
        }
        else{
            int old=st.back().second;
            pair<int,int>p=make_pair(val,min(old,val));
           // p.first=val;
           // int old=st.back().second;
           // p.second=min(old,val);
             st.push_back(p);
        }
        
    }
    
    void pop() {
        if(!st.empty()){
        st.pop_back();}
        else {
            return ;
        }
        
    }
    
    int top() {
        pair<int,int>right=st.back();
        return right.first;
        
    }
    
    int getMin() {
         pair<int,int>right=st.back();
         return right.second;
        
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
