https://leetcode.com/problems/house-robber/description/

class Solution {
public:
   //int solve(vector<int>&nums,int n,int i){
//    if(i>=n){//recursive solution
//        return 0;
//    }
//    int option1 = nums[i]+solve(nums,n,i+2);
//    int option2 = 0+solve(nums,n,i+1);
// int final= max(option1,option2);
// return final;
   //}
   int solve(vector<int>&nums,int n ,int i,vector<int>&dp){
    if(i>=n){
      
        return 0;
    }
    if(dp[i]!=-1){
        return dp[i];
    }
     int option1 = nums[i]+solve(nums,n,i+2,dp);
      int option2 = 0+solve(nums,n,i+1,dp);
      dp[i]=max(option1,option2);
      return dp[i];
      
   }
    int rob(vector<int>& nums) {
        int n=nums.size();
    int i=0;
    vector<int>dp(n+1,-1);

        int ans= solve(nums,n,i,dp);
        return ans;
            }
};
